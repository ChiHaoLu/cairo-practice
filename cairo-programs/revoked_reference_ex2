func foo(x) {
    let y = 1;
    jmp x_not_zero if x != 0;

    x_is_zero:
    [ap] = y, ap++;  // y == 1.
    let y = 2;
    [ap] = y, ap++;  // y == 2.
    jmp done;

    x_not_zero:
    [ap] = y, ap++;  // y == 1.
    let y = 3;
    [ap] = y, ap++;  // y == 3.

    done:
    // Here, y is revoked, and cannot be accessed.
    // `Reference 'y' was revoked.` error will be thrown if trying to access
    ret;
}

func main() {
    foo(1);
    foo(0);
    ret;
}

// $ cairo-compile revoked_reference_ex2 --output revoked_reference_ex2_compiled.json
// $ cairo-run --program=revoked_reference_ex2_compiled.json --print_output --layout=small --steps=32 --print_memory